/*
 * Project done with Oracle NetBeans
 * Distributed under Creative Commons 
 * By Maxime J.
 */
package frame;

import static frame.AjoutCitation.maCitation;
import static frame.ModifierCitation.maCitation;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import obj.Theme;
import quotebase.QuoteBase;

/**
 * "Ni aimer ni haïr", voila la première la moitié de toute sagesse ; "Ne rien
 * dire et ne rien croire", voilà l’autre moitié.
 *
 * @author Maxime J. <maximejrichard at gmail.com>
 */
public class TypeGestion extends javax.swing.JFrame {

    public static QuoteBase maBase;
    public static obj.Type monType;
    public static int maCategorieDeType;
    Icon icone = (new ImageIcon(getClass().getResource("/img/QuoteBaseIconepng.png")));

    public TypeGestion() {
        initComponents();
    }

    /**
     * Creates new form ThemesGestion
     */
    public TypeGestion(int typeCategorie, QuoteBase maBase) {
        // 1 - 999 Types de sources // 1001 - 1999 Titres d'Auteurs 
        // 2001 - 2999 Thèmes de citations // 3001 - 3999 Statuts généraux
        maCategorieDeType = typeCategorie;
        this.maBase = maBase;
        initComponents();
        AjouterjRadioButton1.setSelected(true);

        TypejComboBox1.setModel(initTypeComboModel(typeCategorie));
        TypejComboBox1.setEnabled(false);

        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice defaultScreen = ge.getDefaultScreenDevice();
        Rectangle rect = defaultScreen.getDefaultConfiguration().getBounds();
        int x = (int) rect.getMaxX() / 2 - this.getWidth() / 2;
        int y = 0;
        if (typeCategorie <= 1) {
            y = (int) rect.getMaxY() - this.getHeight();
        }
        this.setLocation(x, y);

    }

    public String titrePanneau() {
        String s = "";
        if (maCategorieDeType == 0) {
            s = "Types de sources";
        } else if (maCategorieDeType == 1) {
            s = "Titres d'Auteurs";

        } else if (maCategorieDeType == 2) {
            s = "Thèmes de citations";

        } else if (maCategorieDeType == 3) {
            s = "Statuts généraux";

        }

        return s;
    }

    public DefaultComboBoxModel initTypeComboModel(int typeCategorie) {
        Vector v = new Vector<>();
        if (typeCategorie == 0) {
            v = initTypeVector();
        } else if (typeCategorie == 1) {
            v = initTitreVector();

        } else if (typeCategorie == 2) {
            v = initThemeVector();

        } else if (typeCategorie == 3) {
            v = initStatutVector();

        }

        DefaultComboBoxModel tcm = new DefaultComboBoxModel(v);
        return tcm;
    }

    public Vector<obj.Type> initTypeVector() {
        Vector<obj.Type> vt = new Vector<>();
        vt.add(new obj.Type(0, "Types de sources"));

        for (obj.Type t : maBase.chargerTypes(1)) {
            if (t.getMonId() > 0 && t.getMonId() < 1000) {
                vt.add(t);
            }
        }

        return vt;
    }

    public Vector<obj.Type> initTitreVector() {
        Vector<obj.Type> vt = new Vector<>();
        vt.add(new obj.Type(0, "Titres d'Auteurs"));
        for (obj.Type t : maBase.chargerTypes(1)) {
            if (t.getMonId() > 1000 && t.getMonId() < 2000) {
                vt.add(t);
            }
        }

        return vt;
    }

    public Vector<Theme> initThemeVector() {
        Vector<Theme> vt = new Vector<>();
        vt.add(new Theme(0, "Thèmes de citations"));

        for (obj.Type t : maBase.chargerTypes(1)) {
            if (t.getMonId() > 2000 && t.getMonId() < 3000) {
                vt.add(new Theme(t.getMonId(), t.getMonNom(), t.getMaDescription()));
            }
        }

        return vt;
    }

    public Vector<obj.Type> initStatutVector() {
        Vector<obj.Type> vt = new Vector<>();
        vt.add(new obj.Type(0, "Statuts généraux"));

        for (obj.Type t : maBase.chargerTypes(1)) {
            if (t.getMonId() > 3000 && t.getMonId() < 4000) {
                vt.add(t);
            }
        }

        return vt;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        EnregistrerjButton1 = new javax.swing.JButton();
        TypejComboBox1 = new javax.swing.JComboBox();
        AjouterjRadioButton1 = new javax.swing.JRadioButton();
        ModifierjRadioButton2 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        EnregistrerjButton1.setText("Enregistrer");
        EnregistrerjButton1.setToolTipText("");
        EnregistrerjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnregistrerjButton1ActionPerformed(evt);
            }
        });

        TypejComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        TypejComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TypejComboBox1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(AjouterjRadioButton1);
        AjouterjRadioButton1.setText("Ajouter");
        AjouterjRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterjRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(ModifierjRadioButton2);
        ModifierjRadioButton2.setSelected(true);
        ModifierjRadioButton2.setText("Modifier");
        ModifierjRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifierjRadioButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText(titrePanneau());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jTextField1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EnregistrerjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AjouterjRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ModifierjRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(TypejComboBox1, 0, 217, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TypejComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AjouterjRadioButton1)
                    .addComponent(ModifierjRadioButton2)
                    .addComponent(EnregistrerjButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AjouterjRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterjRadioButton1ActionPerformed
        // TODO add your handling code here:
        TypejComboBox1.setEnabled(false);
        resetPannel();
    }//GEN-LAST:event_AjouterjRadioButton1ActionPerformed

    private void ModifierjRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifierjRadioButton2ActionPerformed
        // TODO add your handling code here:
        TypejComboBox1.setEnabled(true);


    }//GEN-LAST:event_ModifierjRadioButton2ActionPerformed
    public void resetPannel() {
        jTextArea1.setText("");
        jTextField1.setText("");
        monType = new obj.Type();
        TypejComboBox1.setModel(initTypeComboModel(maCategorieDeType));

    }

    private void EnregistrerjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnregistrerjButton1ActionPerformed
        // TODO add your handling code here:
        int result = 2;
        if (jTextField1.getText().length() < 3 || jTextArea1.getText().length() < 10) {
            JOptionPane.showMessageDialog(null, "Vous devez entrer un Nom et une Description pour pouvoir ajouter un type." + "\n", "Ajout type", JOptionPane.OK_OPTION, icone);
        } else {
            if (AjouterjRadioButton1.isSelected()) {
                monType = new obj.Type();
                monType.setMonNom(jTextField1.getText());
                monType.setMaDescription(jTextArea1.getText());

                maBase.ajouterUnType(monType, maCategorieDeType);
                result = JOptionPane.showConfirmDialog(null, "Vous avez ajouté un nouveau Type :\n" + monType.getMonNom() + "\n\n Voulez-vous ajouter un nouveau Type ?", "Ajout de Type", JOptionPane.YES_NO_OPTION, JOptionPane.YES_NO_OPTION, icone);
            }
            if (ModifierjRadioButton2.isSelected()) {
                monType = new obj.Type(monType.getMonId(), jTextField1.getText(), jTextArea1.getText());

                maBase.MAJType(monType, maCategorieDeType);
                result = JOptionPane.showConfirmDialog(null, "Vous avez modifié le Type :\n" + monType.getMonNom() + "\n\n Voulez-vous ajouter un nouveau Type ?", "Ajout de Type", JOptionPane.YES_NO_OPTION, JOptionPane.YES_NO_OPTION, icone);
            }
        }
        if (result == 0) {
            resetPannel();
        } else if (result == 1) {
            resetPannel();
            this.dispose();
        }
    }//GEN-LAST:event_EnregistrerjButton1ActionPerformed

    private void TypejComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TypejComboBox1ActionPerformed
        // TODO add your handling code here:
        monType = ((obj.Type) TypejComboBox1.getSelectedItem());
        jTextField1.setText(monType.getMonNom());
        jTextArea1.setText(monType.getMaDescription());
    }//GEN-LAST:event_TypejComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TypeGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TypeGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TypeGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TypeGestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TypeGestion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AjouterjRadioButton1;
    private javax.swing.JButton EnregistrerjButton1;
    private javax.swing.JRadioButton ModifierjRadioButton2;
    private javax.swing.JComboBox TypejComboBox1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
